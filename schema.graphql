scalar DateTime

type Query {
  user(id: ID!): User
  contributor(userId: ID!, partnerOrgId: ID!): Contributor
  partnerOrg(id: ID!): PartnerOrg
  hourContribItem(id: ID!): HourContribItem
  hourLog(id: ID!): HourLog
  otherContribItem(id: ID!): OtherContribItem
  ikcReport(id: ID!): IKCReport
  submissionItem(id: ID!): SubmissionItem
  researchProject(id: ID!): ResearchProject
}

type Mutation {
  # User mutations
  createUser(firstName: String!, lastName: String!): ID!
  updateUser(firstName: String, lastName: String): Boolean!
  disableUser(siteAdminId: ID!, userId: ID!): Boolean!
  reactivateUser(userId: ID!, disabledUserId: ID!): Boolean!

  # PartnerOrg mutations
  createPartnerOrg(userId: ID!, partnerOrgAdminId: ID!, name: String!): ID!
  createContributor(
    userId: ID!
    partnerOrgAdminId: ID!
    partnerOrgId: ID!
    annualSalary: Float!
    dailyHours: Float!
    benRatePer: Float!
  ): Boolean!
  addPartnerOrgAdmin(userId: ID!, newAdminID: ID!): Boolean!
  removePartnerAdmin(userId: ID!, removedAdminID: ID!): Boolean!

  # hour log & contribution item mutations
  createHourContribItem(contributorId: ID!): ID!

  # hour log generated in resolver
  addHourLogToItem(
    hourContribItemId: ID!
    hours: Float!
    month: DateTime!
  ): Boolean!
  removeHourContribItem(itemId: ID!, userId: ID!): Boolean!
  removeHourLogItem(hourLogId: ID!, userId: ID!): Boolean!

  # other contribution item mutations
  createOtherContribItem(
    userId: ID!
    itemName: String!
    contributionDate: DateTime!
    value: Float!
    details: String!
  ): ID!
  removeOtherContribItem(userId: ID!, itemId: ID!): Boolean!

  # IKC Report mutations
  createIKCReport(
    userId: ID!
    partnerOrgId: ID!
    reportStartDate: DateTime!
    reportEndDate: DateTime!
    employeeHourIds: [ID]
    otherContributionIds: [ID]
  ): ID!
  createSubmissionItem(
    userId: ID!
    ikcReportID: ID!
    submitterId: ID!
    submissionDate: DateTime!
  ): ID!
  submitIKCReport(userId: ID!, submissionItemId: ID!): Boolean!
  approveIKCReport(userId: ID!, submissionItemID: ID!): Boolean!
  denyIKCReport(userId: ID!, submissionItemID: ID!): Boolean!

  # Research Project mutations
  createResearchProject(
    userId: ID!
    projectTitle: String!
    startDate: DateTime!
    endDate: DateTime!
  ): ID!
  addPartnerOrg(
    userId: ID!
    researchProjectId: ID!
    partnerOrgId: ID!
  ): Boolean!
  removePartnerOrg(
    userId: ID!
    researchProjectId: ID!
    partnerOrgId: ID!
  ): Boolean!
  addNewAdmin(userId: ID!, newAdmin: ID!): Boolean!
  removeAdmin(userId: ID!, adminId: ID!): Boolean!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  siteAdmin: Boolean!
}

type Contributor {
  id: ID
  userId: ID!
  partnerOrgId: ID!
  annualSalary: Float!
  dailyHours: Float!
  benRatePer: Float!
}

type PartnerOrg {
  id: ID!
  name: String!
  admins: [ID]!
  contributors: [Contributor]
}

type HourLog {
  id: ID
  hours: Float!
  month: String!
  hourlyPay: Float
}

type HourContribItem {
  id: ID
  contributor: Contributor!
  hoursPerMonth: [HourLog]
}

type OtherContribItem {
  id: ID
  contributor: Contributor!
  name: String!
  contributionDate: DateTime!
  value: Float!
  details: String!
}

type SubmissionItem {
  id: ID
  submitterId: ID!
  ikcReportID: ID!
  submissionDate: DateTime!
}

type IKCReport {
  id: ID!
  partnerOrgId: ID!
  submissionHistory: [SubmissionItem]
  reportStartDate: DateTime!
  reportEndDate: DateTime!
  employeeHours: [HourContribItem]
  otherContributions: [OtherContribItem]
}

type ResearchProject {
  id: ID!
  projectTitle: String!
  startDate: DateTime!
  endDate: DateTime!
  admins: [User]
  projectPartners: [PartnerOrg]
  ikcReports: [IKCReport]
}
